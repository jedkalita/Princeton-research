import os
import math
import sys
import time
from LOB import *

#class storing the data structures needed for each limit order placed
#time began, cancellation time (generated by a poisson process), number of shares
class LimitOrder:
    def __init__(self, id, buy_or_sell, price, time_began, cancellation_time, order_size, lob):
        self.id = id #an id from the pool of remaining limit orders - a number
        self.buy_or_sell = buy_or_sell #-1 - buy, +1 - sell
        self.price = price
        self.time_began = time_began #of type float - system time called using time.time()
        self.cancellation_time = cancellation_time #of type float
        self.order_size = order_size #units of numbers
        self.end_time = time_began + cancellation_time
        self.lob = lob #the limit order book
        #print("A Limit Order created.")

    def show_characteristics(self): #just for debugging purposes
        if (self.buy_or_sell == -1):
            print("Limit Buy Order id = %d, Order Size = %d, Price = %f, Time Began = %f, Cancellation Time = %f, End Time = %f"
              % (self.id, self.order_size, self.price, self.time_began, self.cancellation_time, self.end_time))
        else:
            print("Limit Sell Order id = %d, Order Size = %d, Price = %f, Time Began = %f, Cancellation Time = %f, End Time = %f"
                  % (self.id, self.order_size, self.price, self.time_began, self.cancellation_time, self.end_time))

    '''def __del__(self):
        print("Now this limit order needs to be deleted.")
        if (self.buy_or_sell == -1):
            print("Deleted Limit Buy Order %d" % self.id)
        else:
            print("Deleted Limit Sell Order %d" % self.id)'''

    def poke(self, begin_time):
        '''print("Val = %f" % (time.time() - begin_time))
        if (time.time() - begin_time >= self.end_time):
            #remove this process from the LOB
            self.__del__()'''
        while(time.time() - begin_time <= self.end_time):
            i = 0
        if self.buy_or_sell == -1: #a buy
            self.lob.limit_buys = self.lob.limit_buys[~(self.lob.limit_buys[:, 2] == self.id), :]
            #print("Waiting... Value = %f" % (time.time() - begin_time))
        else: #sell
            self.lob.limit_sells = self.lob.limit_sells[~(self.lob.limit_sells[:, 2] == self.id), :]
        #print("Now coming out of poke...Will delete it in the limit order book")
        #self.__del__()



if __name__ == "__main__":
    begin_time = time.time()
    lob = LimitOrderBook()
    time_began = time.time()
    lo1 = LimitOrder(1, -1, 104.5, time_began - begin_time, 4.56, 3, lob)
    lo1.show_characteristics()
    '''while(True):
        lo1.poke(begin_time)'''
    #k = 0
    #time.sleep(2.0)
    '''if time.time() - begin_time >= lo1.end_time:
        print(time.time() - begin_time)
        del lo1'''
    #lo1.show_characteristics()
    lo1.poke(time_began)
    #del lo1



